<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestTask.WebUI</name>
    </assembly>
    <members>
        <member name="T:TestTask.WebUI.Controllers.HomeController">
            <summary>
            Main controller
            </summary>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.#ctor(TestTask.Domain.Abstract.ICityRepository,TestTask.Domain.Abstract.ICountryRepository,TestTask.Domain.Abstract.IRegionRepository)">
            <summary>
            Constructor for the controller
            </summary>
            <param name="cityRepo"> Interface for city repository </param>
            <param name="countryRepo"> Interface for country repository </param>
            <param name="regionRepo"> Interface for region repository </param>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.Index">
            <summary>
            Main page
            </summary>
            <returns> View of main page </returns>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.ShowAll">
            <summary>
            List of countries
            </summary>
            <returns> View with list of countries </returns>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.SearchPanel">
            <summary>
            Page with panel for searching countries by name
            </summary>
            <returns> View of search panel </returns>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.SearchPanel(System.String)">
            <summary>
            Post version of page with panel for searching countries by name
            </summary>
            <param name="countryName"> Name of the country to search </param>
            <returns> 
            If a country exists in the database, returns information about it,
            otherwise returns a page with a failure message and a proposal to add a country.
            </returns>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.AddCountry">
            <summary>
            Page with form for adding the country
            </summary>
            <returns> View of form for adding the country </returns>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.AddCountry(TestTask.WebUI.Models.CountryViewModel)">
            <summary>
            Post version of page with form for adding the country.
            </summary>
            <param name="countryVM"> Country view model </param>
            <returns>
            If successful, adds or updates the country and redirects to the main page.
            In case of failure returns the same page in order to correct or
            supplement the data necessary to add the country.
            </returns>
        </member>
        <member name="M:TestTask.WebUI.Controllers.HomeController.Error">
            <summary>
            Error handler
            </summary>
            <returns> Error view</returns>
        </member>
        <member name="T:TestTask.WebUI.Models.CountryViewModel">
            <summary>
            View model for country.
            Necessary for the correct display of the country entity
            (replacing the identifiers of the capital and region with their names)
            </summary>
        </member>
        <member name="P:TestTask.WebUI.Models.CountryViewModel.Country">
            <summary>
            Country entity
            </summary>
        </member>
        <member name="P:TestTask.WebUI.Models.CountryViewModel.CapitalName">
            <summary>
            Name of the capital of the country
            </summary>
        </member>
        <member name="P:TestTask.WebUI.Models.CountryViewModel.RegionName">
            <summary>
            Name of the region of the country
            </summary>
        </member>
        <member name="T:TestTask.WebUI.Models.ErrorViewModel">
            <summary>
            View model for error
            </summary>
        </member>
        <member name="P:TestTask.WebUI.Models.ErrorViewModel.RequestId">
            <summary>
            Request identificator
            </summary>
        </member>
        <member name="P:TestTask.WebUI.Models.ErrorViewModel.ShowRequestId">
            <summary>
            Show request identificator status
            </summary>
        </member>
        <member name="T:TestTask.WebUI.Program">
            <summary>
            Initializes and starts the host with the application.
            </summary>
        </member>
        <member name="M:TestTask.WebUI.Program.Main(System.String[])">
            <summary>
            Main() method is the entry point of the program
            </summary>
            <param name="args"> The argument to the Main() method </param>
        </member>
        <member name="M:TestTask.WebUI.Program.CreateHostBuilder(System.String[])">
            <summary>
            To create and configure a builder object
            </summary>
            <param name="args"> The argument to the CreateHostBuilder() method </param>
            <returns> Universal site (IHostBuilder) </returns>
        </member>
        <member name="T:TestTask.WebUI.Startup">
            <summary>
            The application starts with it. That is, this is the entry point to the application.
            </summary>
        </member>
        <member name="M:TestTask.WebUI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Ð¡onstructor for startup class
            </summary>
            <param name="configuration"> Interface of configuration </param>
        </member>
        <member name="P:TestTask.WebUI.Startup.Configuration">
            <summary>
            Interface of configuration
            </summary>
        </member>
        <member name="M:TestTask.WebUI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"> Interface of service collection </param>
        </member>
        <member name="M:TestTask.WebUI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"> Interface of application builder </param>
            <param name="env"> Interface of web host environment </param>
        </member>
    </members>
</doc>
